#!/usr/bin/env bash

set -eo pipefail

: "${S3_ACCESS_KEY_ID:?}"
: "${S3_ACCESS_KEY:?}"
: "${S3_ROLE_ARN:?}"

[ -z "$DEBUG" ] || set -x

if [ $# -ne 1 ]
  then
    >&2 echo "Usage: ${0} NEW_VERSION"
    exit 1
fi
NEW_VERSION="${1:?}"

RELEASE_DIR="$(cd "$(dirname "$0")/.." ; pwd)"
pushd "$RELEASE_DIR"

  EXISTING_VERSION="$(bosh blobs | sed -En 's/^openldap\/openldap-(.*)\.tgz.*$/\1/p')"
  if [ "${NEW_VERSION}" == "$EXISTING_VERSION" ]
  then
    echo "openldap version is already ${NEW_VERSION}. Nothing to do."
    exit 0
  fi

  bosh reset-release && bosh sync-blobs
  bosh remove-blob "openldap/openldap-${EXISTING_VERSION}.tgz"
  bosh add-blob \
    <(wget -O- "https://www.openldap.org/software/download/OpenLDAP/openldap-release/openldap-${NEW_VERSION}.tgz") \
    "openldap/openldap-${NEW_VERSION}.tgz"

  cat <<EOF > "config/private.yml"
---
blobstore:
  options:
    access_key_id: "$S3_ACCESS_KEY_ID"
    secret_access_key: "$S3_ACCESS_KEY"
    assume_role_arn: "$S3_ROLE_ARN"
EOF

  bosh upload-blobs

  git grep -l --threads=1 "openldap-${EXISTING_VERSION}" -- jobs/ packages/ | xargs sed -e "s/openldap-${EXISTING_VERSION}/openldap-${NEW_VERSION}/g" -i'~'
  mv packages/openldap-{"${EXISTING_VERSION}","${NEW_VERSION}"}
  git add packages/ jobs/ config/
  git commit -m "Bump OpenLDAP package to ${NEW_VERSION}"
popd

