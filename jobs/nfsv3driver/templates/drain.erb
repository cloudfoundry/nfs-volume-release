#!/bin/bash

set -e

RUN_DIR=/var/vcap/sys/run/nfsv3driver
PIDFILE=$RUN_DIR/nfsv3driver.pid
LOG_DIR=/var/vcap/sys/log/nfsv3driver
LOGFILE=$LOG_DIR/drain.log
ADDRESS=<%=p("nfsv3driver.admin_addr")%>

mkdir -p $LOG_DIR

exec 3>&1

exec &> >(while read line; do echo "[$(date +%Y-%m-%dT%H:%M:%S.%NZ)] $line" >> ${LOGFILE}; done;)

evacuate() {
  curl --fail --max-time 600 http://$ADDRESS/evacuate >/dev/null 2>&1
}

heartbeat() {
  curl --fail --silent http://$ADDRESS/ping >/dev/null 2>&1
}

wait_for_apps_to_be_evacuated() {
    for i in {1..90}; do
        if pgrep -x "rep" > /dev/null; then
            echo "waiting for rep..."
            sleep 10
        else
            break
        fi
    done
    if [ $i == 90 ]; then
        trap - EXIT
        exit 1
    fi
}

output_for_bosh() {
  exit_code=$?

  if [ $exit_code -eq 0 ]; then
    echo "nfsv3driver exited"
  else
    echo "evacuation failed"
  fi

  #See https://www.pivotaltracker.com/story/show/165747144/comments/202416034
  echo $exit_code >&3
}

trap output_for_bosh EXIT

if [ ! -f $PIDFILE ]; then
  echo "PIDFILE does not exist"
  exit 0
fi

pid=$(cat $PIDFILE)

if [ ! -e /proc/$pid ]; then
  echo "nfsv3driver process not running"
  exit 0
fi

wait_for_apps_to_be_evacuated

echo "rep is done..evacuating nfsv3driver"

set +e
evacuate
evacuate_exit_code=$?
set -e

if [ $evacuate_exit_code -eq 0 ]; then
  for i in {1..60}; do
    if heartbeat; then
      echo "waiting"
      sleep 5
    else
      break
    fi
  done

  kill -9 $pid || true
  rm -rf $PIDFILE || true
elif [ $evacuate_exit_code -eq 28 ]; then
   echo "Drain timed out"
   kill -9 $pid || true
   rm -rf $PIDFILE || true
else
  exit 0
fi
